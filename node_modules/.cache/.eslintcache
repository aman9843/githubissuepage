[{"/home/aman/React/githubissuepage/src/index.js":"1","/home/aman/React/githubissuepage/src/App.js":"2","/home/aman/React/githubissuepage/src/reportWebVitals.js":"3","/home/aman/React/githubissuepage/src/components/Login.js":"4","/home/aman/React/githubissuepage/src/components/SignUp.js":"5","/home/aman/React/githubissuepage/src/components/Home.js":"6","/home/aman/React/githubissuepage/src/components/Table.js":"7","/home/aman/React/githubissuepage/src/components/AddIssues.js":"8","/home/aman/React/githubissuepage/src/components/Edit.js":"9","/home/aman/React/githubissuepage/src/components/Details.js":"10","/home/aman/React/githubissuepage/src/components/Contact.js":"11"},{"size":510,"mtime":1643707108467,"results":"12","hashOfConfig":"13"},{"size":1284,"mtime":1644557966642,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1643608365314,"results":"15","hashOfConfig":"13"},{"size":3823,"mtime":1644570555910,"results":"16","hashOfConfig":"13"},{"size":4274,"mtime":1644570548275,"results":"17","hashOfConfig":"13"},{"size":2964,"mtime":1644844311301,"results":"18","hashOfConfig":"13"},{"size":3270,"mtime":1644570601147,"results":"19","hashOfConfig":"13"},{"size":5912,"mtime":1644841019445,"results":"20","hashOfConfig":"13"},{"size":5041,"mtime":1644570563426,"results":"21","hashOfConfig":"13"},{"size":3569,"mtime":1644570570309,"results":"22","hashOfConfig":"13"},{"size":1522,"mtime":1644841372094,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"1ratf3u",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/aman/React/githubissuepage/src/index.js",[],[],["59","60"],"/home/aman/React/githubissuepage/src/App.js",[],[],"/home/aman/React/githubissuepage/src/reportWebVitals.js",[],[],"/home/aman/React/githubissuepage/src/components/Login.js",[],[],"/home/aman/React/githubissuepage/src/components/SignUp.js",[],[],"/home/aman/React/githubissuepage/src/components/Home.js",[],[],"/home/aman/React/githubissuepage/src/components/Table.js",[],[],"/home/aman/React/githubissuepage/src/components/AddIssues.js",[],[],"/home/aman/React/githubissuepage/src/components/Edit.js",["61"],[],"import React,{useState,useEffect} from \"react\";\nimport { NavLink, useParams, useHistory} from \"react-router-dom\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Edit = () => {\n\n    toast.configure()\n\n    const history = useHistory();\n\n    const[inpval,setInpval] = useState({\n        name:\"\",\n        email:\"\",\n        age:\"\",\n        mobile:\"\",\n        work:\"\",\n        add:\"\",\n        desc:\"\"\n\n    })\n\n    const setData = (e) => {\n        console.log(e.target.value);\n        const {name,value}= e.target;\n        setInpval((preval)=>{\n            return {\n                ...preval,\n                [name]:value\n            }\n        })\n\n\n    }\n\n    const{id} = useParams(\"\");\n    console.log(id);\n\n\n\nconst getdata = async () => {\n    const res = await fetch(`/getuser/${id}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      }\n    });\n\n    const data = await res.json();\n    console.log(data);\n\n    if (res.status === 422 || !data) {\n      console.log(\"error\");\n    } else {\n      setInpval(data);\n      console.log(\"got  added\");\n    }\n  }\n\n\n  useEffect(()=>{\n      getdata();\n  }, []);\n\n\n  const updateuser = async (e) => {\n      e.preventDefault();\n\n      const {name,email,age,mobile,work,add,desc} = inpval\n\n      const res2 = await fetch(`/updateuser/${id}`, {\n          method:\"PATCH\",\n          headers:{\n              \"Content-Type\": \"application/json\"\n          },\n\n          body:JSON.stringify({\n              name,email,age,mobile,work,add,desc\n          })\n      })\n\n      const data2 = await res2.json()\n      console.log(data2);\n\n      if(res2.status === 422 || !data2) {\n        toast(\"Please Fill The Data\")\n      } else {\n          history.push(\"/table\")\n         toast(\"Data Updated SuccessFully!\")\n      }\n  }\n\n \n\n  return (\n\n    <div className=\"container mt-5\">\n          \n            <NavLink to=\"/\">home</NavLink>\n            \n      \n            <form className=\"mt-4\">\n                <div className=\"row\">\n                    <div className=\"mb-3 col-lg-6 col-md-6 col-12\">\n                        <label htmlFor=\"exampleInputEmail1\" className=\"form-label c\">Name</label>\n                        <input type=\"text\"  name=\"name\" value={inpval.name} onChange={setData} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\n                    </div>\n                    <div className=\"mb-3 col-lg-6 col-md-6 col-12\">\n                        <label htmlFor=\"exampleInputPassword1\" className=\"form-label c\">email</label>\n                        <input type=\"email\"  name=\"email\" value={inpval.email} onChange={setData}  className=\"form-control\" id=\"exampleInputPassword1\" />\n                    </div>\n                    <div className=\"mb-3 col-lg-6 col-md-6 col-12\">\n                        <label htmlFor=\"exampleInputPassword1\" className=\"form-label c\">age</label>\n                        <input type=\"text\"  name=\"age\" value={inpval.age} onChange={setData}  className=\"form-control\" id=\"exampleInputPassword1\" />\n                    </div>\n                    <div className=\"mb-3 col-lg-6 col-md-6 col-12\">\n                        <label htmlFor=\"exampleInputPassword1\" className=\"form-label c\">Mobile</label>\n                        <input type=\"number\"  name=\"mobile\" value={inpval.mobile} onChange={setData}  className=\"form-control\" id=\"exampleInputPassword1\" />\n                    </div>\n                    <div className=\"mb-3 col-lg-6 col-md-6 col-12\">\n                        <label htmlFor=\"exampleInputPassword1\" className=\"form-label c\">Work</label>\n                        <input type=\"text\"  name=\"work\" value={inpval.work} onChange={setData}  className=\"form-control\" id=\"exampleInputPassword1\" />\n                    </div>\n                    <div className=\"mb-3 col-lg-6 col-md-6 col-12\">\n                        <label htmlFor=\"exampleInputPassword1\" className=\"form-label c\">Address</label>\n                        <input type=\"text\"  name=\"add\"  value={inpval.add} onChange={setData}  className=\"form-control\" id=\"exampleInputPassword1\" />\n                    </div>\n                    <div className=\"mb-3 col-lg-12 col-md-12 col-12\">\n                        <label htmlFor=\"exampleInputPassword1\" className=\"form-label c\">Desciption of your Issue</label>\n                        <textarea name=\"desc\" value={inpval.desc} onChange={setData}  className=\"form-control\"></textarea>\n                    </div>\n                    <div className=\"form\">\n                      <label htmlFor=\"exampleFormControlFile1 d\"></label>\n                      <input type=\"file\"  className=\"form-control-file\" id=\"exampleFormControlFile1\"/>\n                    </div>\n                    <form>\n                  \n                   </form>\n\n                    <button type=\"submit\" onClick={updateuser} className=\"btn btn-primary\">Submit</button>\n                </div>\n               \n            </form>\n            \n        </div>\n              \n  );\n};\n\nexport default Edit;\n","/home/aman/React/githubissuepage/src/components/Details.js",[],[],"/home/aman/React/githubissuepage/src/components/Contact.js",[],[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":63,"column":6,"nodeType":"68","endLine":63,"endColumn":8,"suggestions":"69"},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getdata'. Either include it or remove the dependency array.","ArrayExpression",["72"],"no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},"Update the dependencies array to be: [getdata]",{"range":"75","text":"76"},[1176,1178],"[getdata]"]