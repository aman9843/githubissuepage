{"ast":null,"code":"var _jsxFileName = \"/home/aman/React/githubissuepage/src/components/GithubIssues.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GithubIssues() {\n  _s();\n\n  const handleUpClick = () => {\n    let newText = text.toUpperCase();\n    setText(newText);\n    props.showAlert(\"Converted to uppercase!\", \"success\");\n  };\n\n  const handleLoClick = () => {\n    let newText = text.toLowerCase();\n    setText(newText);\n    props.showAlert(\"Converted to lowercase!\", \"success\");\n  };\n\n  const handleClearClick = () => {\n    let newText = '';\n    setText(newText);\n    props.showAlert(\"Text Cleared!\", \"success\");\n  };\n\n  const handleOnChange = event => {\n    setText(event.target.value);\n  }; // Credits: A\n\n\n  const handleCopy = () => {\n    navigator.clipboard.writeText(text);\n    props.showAlert(\"Copied to Clipboard!\", \"success\");\n  }; // Credits: Coding Wala\n\n\n  const handleExtraSpaces = () => {\n    let newText = text.split(/[ ]+/);\n    setText(newText.join(\" \"));\n    props.showAlert(\"Extra spaces removed!\", \"success\");\n  };\n\n  const [text, setText] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to Github issue page \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        color: props.mode === 'dark' ? 'white' : '#042743'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mb-4\",\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          value: text,\n          onChange: handleOnChange,\n          style: {\n            backgroundColor: props.mode === 'dark' ? '#13466e' : 'white',\n            color: props.mode === 'dark' ? 'white' : '#042743'\n          },\n          id: \"myBox\",\n          rows: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: text.length === 0,\n        className: \"btn btn-primary mx-1 my-1\",\n        onClick: handleUpClick,\n        children: \"Convert to Uppercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: text.length === 0,\n        className: \"btn btn-primary mx-1 my-1\",\n        onClick: handleLoClick,\n        children: \"Convert to Lowercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: text.length === 0,\n        className: \"btn btn-primary mx-1 my-1\",\n        onClick: handleClearClick,\n        children: \"Clear Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: text.length === 0,\n        className: \"btn btn-primary mx-1 my-1\",\n        onClick: handleCopy,\n        children: \"Copy Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: text.length === 0,\n        className: \"btn btn-primary mx-1 my-1\",\n        onClick: handleExtraSpaces,\n        children: \"Remove Extra Spaces\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      style: {\n        color: props.mode === 'dark' ? 'white' : '#042743'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your text summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [text.split(/\\s+/).filter(element => {\n          return element.length !== 0;\n        }).length, \" words and \", text.length, \" characters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [0.008 * text.split(/\\s+/).filter(element => {\n          return element.length !== 0;\n        }).length, \" Minutes read\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text.length > 0 ? text : \"Nothing to preview!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n}\n\n_s(GithubIssues, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n\n_c = GithubIssues;\nexport default GithubIssues;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubIssues\");","map":{"version":3,"sources":["/home/aman/React/githubissuepage/src/components/GithubIssues.js"],"names":["React","GithubIssues","handleUpClick","newText","text","toUpperCase","setText","props","showAlert","handleLoClick","toLowerCase","handleClearClick","handleOnChange","event","target","value","handleCopy","navigator","clipboard","writeText","handleExtraSpaces","split","join","useState","color","mode","heading","backgroundColor","length","filter","element"],"mappings":"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","sourcesContent":["import React from 'react';\n\nfunction GithubIssues() {\n\n\n  const handleUpClick = ()=>{\n    let newText = text.toUpperCase();\n    setText(newText)\n    props.showAlert(\"Converted to uppercase!\", \"success\");\n  }\n\n\n  const handleLoClick = ()=>{ \n    let newText = text.toLowerCase();\n    setText(newText)\n    props.showAlert(\"Converted to lowercase!\", \"success\");\n}\n\nconst handleClearClick = ()=>{ \n    let newText = '';\n    setText(newText);\n    props.showAlert(\"Text Cleared!\", \"success\");\n}\n\nconst handleOnChange = (event)=>{\n    setText(event.target.value) \n}\n\n// Credits: A\nconst handleCopy = () => {\n    navigator.clipboard.writeText(text); \n    props.showAlert(\"Copied to Clipboard!\", \"success\");\n}\n\n// Credits: Coding Wala\nconst handleExtraSpaces = () => {\n    let newText = text.split(/[ ]+/);\n    setText(newText.join(\" \"));\n    props.showAlert(\"Extra spaces removed!\", \"success\");\n}\n\nconst [text, setText] = useState(''); \n  return (\n  \n  <div>\n    <h1>Welcome to Github issue page </h1>\n    <div className=\"container\" style={{color: props.mode==='dark'?'white':'#042743'}}> \n            <h1 className='mb-4'>{props.heading}</h1>\n            <div className=\"mb-3\"> \n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#13466e':'white', color: props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\n            </div>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert to Lowercase</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\n        </div>\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#042743'}}>\n            <h2>Your text summary</h2>\n            <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\n            <p>{0.008 *  text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} Minutes read</p>\n            <h2>Preview</h2>\n            <p>{text.length>0?text:\"Nothing to preview!\"}</p>\n        </div>\n\n  </div>\n  \n  );\n}\n\nexport default GithubIssues;\n"]},"metadata":{},"sourceType":"module"}