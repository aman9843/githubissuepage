{"ast":null,"code":"var _jsxFileName = \"/home/aman/React/githubissuepage/src/components/GithubIssues.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n\n  const handleUpClick = () => {\n    let newText = text.toUpperCase();\n    setText(newText);\n    props.showAlert(\"Converted to uppercase!\", \"success\");\n  };\n\n  const handleLoClick = () => {\n    let newText = text.toLowerCase();\n    setText(newText);\n    props.showAlert(\"Converted to lowercase!\", \"success\");\n  }; // const handleClearClick = ()=>{\n  //     let newText = '';\n  //     setText(newText);\n  //     props.showAlert(\"Text Cleared!\", \"success\");\n  // }\n\n\n  const handleOnChange = event => {\n    setText(event.target.value);\n  }; // const handleCopy = () => {\n  //     navigator.clipboard.writeText(text);\n  //     props.showAlert(\"Copied to Clipboard!\", \"success\");\n  // }\n  // const handleExtraSpaces = () => {\n  //     let newText = text.split(/[ ]+/);\n  //     setText(newText.join(\" \"));\n  //     props.showAlert(\"Extra spaces removed!\", \"success\");\n  // }\n\n\n  const [handleUploadStage, setHandleUpload] = useState(\"\");\n  handleUploadStage = {\n    selectedFile: null\n  };\n\n  fileSelectedHandler = event => {\n    setHandleUpload({\n      selectedFile\n    });\n  };\n\n  const handleUpload = () => {};\n\n  const [text, setText] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control contrast my-4\",\n          placeholder: \"Title\",\n          \"aria-label\": \"Title\",\n          type: \"text\",\n          name: \"issue[title]\",\n          id: \"issue_title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          value: text,\n          onChange: handleOnChange,\n          id: \"myBox\",\n          rows: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: text.length === 0,\n        className: \"btn btn-primary mx-1 my-1\",\n        onClick: handleUpClick,\n        children: \"Uppercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: text.length === 0,\n        className: \"btn btn-primary mx-1 my-1\",\n        onClick: handleLoClick,\n        children: \"Lowercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        onChange: fileSelectedHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-1 my-1\",\n        onClick: handleUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your text summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [text.split(/\\s+/).filter(element => {\n          return element.length !== 0;\n        }).length, \" \", \"words and \", text.length, \" characters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [0.008 * text.split(/\\s+/).filter(element => {\n          return element.length !== 0;\n        }).length, \" \", \"Minutes read\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text.length > 0 ? text : \"Nothing to preview!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TextForm, \"t4pXZ7aTSLkevJXpl+KLVfeh9cE=\");\n\n_c = TextForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"sources":["/home/aman/React/githubissuepage/src/components/GithubIssues.js"],"names":["React","useState","TextForm","props","handleUpClick","newText","text","toUpperCase","setText","showAlert","handleLoClick","toLowerCase","handleOnChange","event","target","value","handleUploadStage","setHandleUpload","selectedFile","fileSelectedHandler","handleUpload","length","split","filter","element"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function TextForm(props) {\n  const handleUpClick = () => {\n    let newText = text.toUpperCase();\n    setText(newText);\n    props.showAlert(\"Converted to uppercase!\", \"success\");\n  };\n\n  const handleLoClick = () => {\n    let newText = text.toLowerCase();\n    setText(newText);\n    props.showAlert(\"Converted to lowercase!\", \"success\");\n  };\n\n  // const handleClearClick = ()=>{\n  //     let newText = '';\n  //     setText(newText);\n  //     props.showAlert(\"Text Cleared!\", \"success\");\n  // }\n\n  const handleOnChange = (event) => {\n    setText(event.target.value);\n  };\n\n  // const handleCopy = () => {\n  //     navigator.clipboard.writeText(text);\n  //     props.showAlert(\"Copied to Clipboard!\", \"success\");\n  // }\n\n  // const handleExtraSpaces = () => {\n  //     let newText = text.split(/[ ]+/);\n  //     setText(newText.join(\" \"));\n  //     props.showAlert(\"Extra spaces removed!\", \"success\");\n  // }\n  const [handleUploadStage, setHandleUpload] = useState(\"\");\n  handleUploadStage = {\n    selectedFile: null\n    }\n\n\n  fileSelectedHandler = event => {\n    setHandleUpload ({\n      selectedFile\n    })\n  }\n\n  const handleUpload = () => {\n    \n  }\n\n  const [text, setText] = useState(\"\");\n\n  return (\n    <>\n      <div className=\"container my-5\">\n        <div className=\"row\">\n          <input\n            className=\"form-control contrast my-4\"\n            placeholder=\"Title\"\n            aria-label=\"Title\"\n            type=\"text\"\n            name=\"issue[title]\"\n            id=\"issue_title\"\n          />\n        </div>\n\n        <div className=\"row\">\n          <textarea\n            className=\"form-control\"\n            value={text}\n            onChange={handleOnChange}\n            id=\"myBox\"\n            rows=\"8\"\n          ></textarea>\n        </div>\n        <button\n          disabled={text.length === 0}\n          className=\"btn btn-primary mx-1 my-1\"\n          onClick={handleUpClick}\n        >\n          Uppercase\n        </button>\n        <button\n          disabled={text.length === 0}\n          className=\"btn btn-primary mx-1 my-1\"\n          onClick={handleLoClick}\n        >\n          Lowercase\n        </button>\n        <input type=\"file\" name=\"file\" onChange={fileSelectedHandler} />\n        <button className=\"btn btn-primary mx-1 my-1\" onClick={handleUpload}>\n          Upload\n        </button>\n        {/* <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\n              <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\n              <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Extra Spaces</button> */}\n      </div>\n      <div className=\"container my-3\">\n        <h2>Your text summary</h2>\n        <p>\n          {\n            text.split(/\\s+/).filter((element) => {\n              return element.length !== 0;\n            }).length\n          }{\" \"}\n          words and {text.length} characters\n        </p>\n        <p>\n          {0.008 *\n            text.split(/\\s+/).filter((element) => {\n              return element.length !== 0;\n            }).length}{\" \"}\n          Minutes read\n        </p>\n        <h2>Preview</h2>\n        <p>{text.length > 0 ? text : \"Nothing to preview!\"}</p>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}